[advice]
    statusHints = false # Slightly less verbose status output
[user]
	email = dan.strokirk@gmail.com
	name = Dan Strokirk
[github]
    user = strokirk
[core]
    pager = less -F -X
    excludesFile = ~/.gitignore
[push]
	default = upstream
[pull]
	ff = only
[rebase]
	updateRefs = true
[commit]
    # Show diff in commit message editor
	verbose = 1
[diff]
    # Don't add a/b/ prefixes to diff - to make it easier to copy filename
	noprefix = true
[hub]
	protocol = ssh
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[alias]
    amend = commit --amend --verbose
    axe = log -p -G
    branch-files = diff origin/master...HEAD --diff-filter=AMR --name-only
    branch-name = rev-parse --abbrev-ref HEAD
    conflict-files = diff --diff-filter=U --name-only
    changed = diff HEAD --name-only --diff-filter=AMR
    done = "!git fetch && git rebase origin/master"
    edit-changed = "!$EDITOR $(git changed)"
    publish = "!git push --set-upstream origin $(git branch-name)"
    reset-upstream = reset --hard "@{upstream}"
    sync = fetch origin master:master
    back = "!git undo && git unstage"
    undo = reset --soft HEAD^
    unstage = reset HEAD
    upstream = rev-parse --abbrev-ref --symbolic-full-name "@{upstream}"
    finish = "!git-finish"

    # List aliases
    aliases = config --get-regexp '^alias'
    branches = branch -v
    tags = tag -l

    s = status
    d = diff
    r = rebase
    ds = diff --staged
    ap = add --patch
    co = checkout
    cp = checkout --patch
    up = reset HEAD --patch
    pr = "!f() { git checkout $1 && git-rename-pr; }; f"
    cc = commit -v
    cm = commit -v -m
    fix = commit --fixup
    rup = "!git reset-upstream"
    wip = "commit -a -m '[ci skip] WIP'"
    rom = rebase -i --autosquash origin/master
    prom = pull --rebase origin master

    pwd = status -sb
    sha = rev-parse --short
    lgb = log master..HEAD
    lgg = log --graph --pretty=oneline --abbrev-commit
    lol = log --oneline --graph --decorate --all
    lil = log --oneline --graph --decorate
    lp = log --patch-with-stat
    ls = log --pretty=format:\"%C(yellow)%h%Cred%d %Creset%s%Cblue [%cn]\" --decorate
[include]
    path = ~/.gitconfig.local
